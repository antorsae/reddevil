** RUTINAS DE SENOS & SPRITES
** NO ESTA ACABADO, TAN SOLO ES
** UNA PRUEBA. LAS TABLAS ESTAN
** GENERADAS CON EL GFA BASIC
** Y LAS CONVIERTO EN DIRECCIONES
** DE PANTALLA Y EN FUENTE DE SPR

** (C) 1990 RED DEVIL

MAXX	EQU 320
MAXY	EQU 200
BOLAS	EQU 20
	CLR.L -(A7)
	MOVE.W #$20,-(A7)
	TRAP #1
	LEA 6(A7),A7
	BSR MAKESPR
	BSR G_SINUS
	BSR CLS
	CLR.W INCX
	CLR.W INCY
	CLR.W DOX
	CLR.W DOY
UJ	MOVE.W #$25,-(A7)
	TRAP #14
	LEA 2(A7),A7
	MOVE.L #$600FF,-(A7)
	TRAP #1
	LEA 4(A7),A7
	SUB.B #'1',D0
	BNE.S INCXX
	ADDQ.W #8,INCX
INCXX	CMP.B #1,D0
	BNE.S DECXX
	SUBQ.W #8,INCX
DECXX	CMP.B #2,D0
	BNE.S INCYY
	ADDQ.W #8,INCY
INCYY	CMP.B #3,D0
	BNE.S DECYY
	SUBQ.W #8,INCY
DECYY	CMP.B #4,D0
	BNE.S DEXX
	ADDQ.W #8,DUX
DEXX	CMP.B #5,D0
	BNE.S INDY
	SUBQ.W #8,DUX
INDY	CMP.B #6,D0
	BNE.S DEDY
	ADDQ.W #8,DUY
DEDY	CMP.B #7,D0
	BNE.S DEDD
	SUBQ.W #8,DUY
DEDD	MOVE.L DUX,DOX
	MOVE.L INCX,D0
	ADD.L D0,SUX
	ADD.L D0,DUX
	BSR TESTSU
	BSR GET_N
	MOVE.L A1,BOLAS
	BSR P_SPR
	LEA BOLAS+4,A3
	MOVE.L DUX,D6
	MOVE.L DOX,D2
	REPT BOLAS
	BSR GET_NA
	MOVE.L A1,(A3)+
	BSR P_SPR
	ADD.L D2,DUX
	ENDR
	MOVE.L D6,DUX
	BRA UJ
	CLR.L -(A7)
	TRAP #1
INCX	DC.W 1
INCY	DC.W 1
DOX	DC.W 0
DOY	DC.W 0
CLS	LEA $F8000,A0
	MOVE.L #(32000/8)-1,D0
CLR_L	CLR.L (A0)+
	CLR.L (A0)+
	DBF D0,CLR_L
	RTS
PARTE	MACRO RED
	MOVE.L (160*\1)(A1),D0
	AND.L (A0)+,D0
	OR.L (A0)+,D0
	MOVE.L D0,(160*\1)(A1)
	MOVE.L (160*\1)+8(A1),D0
	AND.L (A0)+,D0
	OR.L (A0)+,D0
	MOVE.L D0,(160*\1)+8(A1)
	ENDM
PARTE0	MACRO RED
	MOVE.L (A1),D0
	AND.L (A0)+,D0
	OR.L (A0)+,D0
	MOVE.L D0,(A1)
	MOVE.L 8(A1),D0
	AND.L (A0)+,D0
	OR.L (A0)+,D0
	MOVE.L D0,8(A1)
	ENDM
P_SPR	PARTE0
	PARTE 1
	PARTE 2
	PARTE 3
	PARTE 4
	PARTE 5
	PARTE 6
	PARTE 7
	PARTE 8
	PARTE 9
	PARTE 10
	PARTE 11
	PARTE 12
	PARTE 13
	PARTE 14
	PARTE 15
	RTS
MAKESPR	LEA PRO+34+(88*160),A0
	LEA $F8000,A1
	BSR C_SP
	LEA PRO+34+((88+16)*160),A0
	LEA $F8000+(17*160),A1
	BSR C_SP
	MOVEQ #16-1,D7
	LEA SPR_OR,A1
ROT_OR	BSR SAVE_SP
	LEA $F8000,A0
	BSR ROX_OR
	LEA $F8000+(17*160),A0
	BSR ROX_AND
	DBF D7,ROT_OR
	RTS
C_SP	MOVEQ #16-1,D7
CPSLOOP	MOVE.L (A0),(A1)
	MOVE.L 4(A0),4(A1)
	MOVE.L 8(A0),8(A1)
	MOVE.L 8+4(A0),8+4(A1)
	LEA 160(A0),A0
	LEA 160(A1),A1
	DBF D7,CPSLOOP
	RTS
SAVE_SP	LEA $F8000,A0
	MOVEQ #16-1,D6
SVLOOP	MOVE.L 160*17(A0),(A1)+
	MOVE.L (A0),(A1)+
	MOVE.L (160*17)+8(A0),(A1)+
	MOVE.L 8(A0),(A1)+
	LEA 160(A0),A0
	DBF D6,SVLOOP
	RTS
ROX_OR	MOVEQ #16-1,D6
ROXLIN	MOVEQ #4-1,D5
ROXPLA	MOVE.W #0,CCR
	ROXR (A0)
	ROXR 8(A0)
	ADDQ.L #2,A0
	DBF D5,ROXPLA
	LEA 160-(4*2)(A0),A0
	DBF D6,ROXLIN
	RTS
ROX_AND	MOVEQ #16-1,D6
ROXLINA	MOVEQ #4-1,D5
ROXPLAA	MOVE.W #-1,CCR
	ROXR (A0)
	ROXR 8(A0)
	ADDQ.L #2,A0
	DBF D5,ROXPLAA
	LEA 160-(4*2)(A0),A0
	DBF D6,ROXLINA
	RTS

** GENERA EN Y UN INC DE PANTALLA
** Y EN X AS TABLAS DE PANTALLA
** Y DE FUENTE

G_SINUS	LEA SINUS,A0
	MOVE.W #MAXX-1,D7
GENEY	MOVEQ #0,D0
	MOVE.W (A0),D0
	MULU #160,D0
	MOVE.L D0,(A0)+
	MOVE.L #0,(A0)+
	DBF D7,GENEY
	MOVE.W #MAXY-1,D7
GENEX	MOVEQ #0,D0
	MOVEQ #0,D1
	MOVE.W (A0),D0
	DIVU #16,D0
	MOVE.W D0,D1
	MULU #8,D1
	CLR.W D0
	SWAP D0
	MULU #2*4*16*2,D0
	ADD.L #SPR_OR,D0
	ADD.L #$F8000,D1
	MOVE.L D0,(A0)+
	MOVE.L D1,(A0)+
	DBF D7,GENEX
	RTS
TESTSU	CMP.W #MAXY*8,SUX
	BLT.S NOOVX
	CLR.W SUX
NOOVX	CMP.W #MAXX*8,SUY
	BLT.S NOOVY
	CLR.W SUY
NOOVY	RTS	
GET_N	MOVE.W SUX,D7
	LEA SINUS+(MAXX*8),A3
	MOVE.L 0(A3,D7.W),A0
	MOVE.L 4(A3,D7.W),A1
	MOVE.W SUY,D7
	LEA SINUS(PC,D7.W),A3
	ADDA.L (A3),A1
	RTS
GET_NA	MOVE.W DUX,D7
	CMP.W #MAXY*8,D7
	BLT.S NOINX  
	SUB.W #MAXY*8,D7
	MOVE.W D7,DUX
NOINX	LEA SINUS+(MAXX*8),A3
	MOVE.L 0(A3,D7.W),A0
	MOVE.L 4(A3,D7.W),A1
	MOVE.W DUY,D7
	CMP.W #MAXX*8,D7
	BLT.S NOINY  
	SUB.W #MAXX*8,D7
	MOVE.W D7,DUY
NOINY	LEA SINUS(PC,D7.W),A3
	ADDA.L (A3),A1
	RTS
SINUS	INCBIN 'SENOS.RED'
BALLX1	DC.W 1
DUX	DS.W 1
DUY	DS.W 1
SUX	DS.W 1
SUY	DS.W 1
DAT_BO	DS.L BOLAS+1
SPR_OR	DS.W (2*4)*16*16
PRO	INCBIN 'DEMO2_LG.PI1'	

	
	
	
	
	
		
	
	