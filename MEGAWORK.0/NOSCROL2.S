** SINUS DOTS: RUTINA DE MOVIMIENTOS
** DADOS POR FUNCIONES TRIGONOMETRICAS
** UN SEN(X) OTRO DE (Y) Y UNA TABLA
** DE CIRCULOS A A¥ADIR A LA POSICION
** DADA. 

** (C) 1990 RED DEVIL

PI	EQU $2000
GRAD	EQU PI/4
MAX	EQU PI/2
MAY	EQU PI/4
LBAL	EQU 2
NBALLS	EQU 340
LSUM	EQU 20
BASE 	EQU $F0000
	BRA MAINCOD
TABLE	INCBIN 'MEGASIN.RED'
MAINCOD	PEA 0
	MOVE.W #$20,-(A7)
	TRAP #1
	LEA $2000,A7
	BSR SETSIN
	BSR P_BALL
	BSR SETNUM
	BSR CLS
	BSR SSCREEN
	BSR MUZAK
	BSR SINT
	MOVE.W #0,$FFFF8240.W
	MOVE.W #$777,$FFFF8242.W
ME	CLR.B SYNC
VSYNC	TST.B SYNC
	BEQ.S VSYNC
	*MOVE.W #$070,$FFFF8240.W
	BSR MUZAK+4
	BSR INPUTK
	BSR CHGSC
	BSR BOSPR
	BSR PLAT
	BSR CALCTR
	BSR PTABLE
	*MOVE.W #$00,$FFFF8240.W
	CMP.B #$39,$FFFFFC02.W
	BNE.S ME
	BSR GINT
	CLR.L -(A7)
	TRAP #1
PLAT	LEA BOR(PC),A0
	LEA BORR+(NBALLS*2)(PC),A1
	REPT NBALLS/20
	MOVEM.L (A0)+,D0-D7/A2-A3
	MOVEM.L D0-D7/A2-A3,-(A1)
	ENDR
	RTS
CHGSC	LEA SCREEN(PC),A0
	MOVE.L (A0),D0
	BCHG #15,D0
	MOVE.L D0,(A0)
	LSR.L #8,D0
	MOVE.B D0,$FFFF8203.W
	LSR.W #8,D0
	MOVE.B D0,$FFFF8201.W
	RTS
BOSPR	MOVEA.L SCREEN,A1
	LEA LSUM*160(A1),A1
	MOVEQ #0,D1
	LEA BORR(PC),A2
	REPT NBALLS
	MOVE.W (A2)+,D0
	MOVE.W D1,0(A1,D0.W) 
	ENDR
	RTS	
INPUTK	MOVE.B $FFFFFC02.W,D0
	LEA FUNC(PC),A0
SEARCHX	MOVE.W (A0)+,D1
	BPL.S NVETE
	RTS
NVETE	ADDQ.L #4,A0
	CMP.B D0,D1
	BNE.S SEARCHX
	MOVE.L -4(A0),A0
	LEA POSITBL(PC),A1
	LEA SINUSVAR(PC),A2
	JMP (A0)
FUNC	
KEU	MACRO T,F
	DC.W \1
	DC.L \2
	ENDM
	KEU $48,REXP
	KEU $50,SUXP
	KEU $4B,REXI
	KEU $4D,SUXI
	DC.W -1
SUXP	ADDQ.W #2,(A1)
	AND.W #$F,(A1)
	RTS
REXP	SUBQ.W #2,(A1)
	AND.W #$F,(A1)
	RTS
SUXI	MOVE.W (A1),D0
	ADD.W D0,D0
	MOVE.W FTABLE(PC,D0.W),D1
	MOVE.W FTABLE+2(PC,D0.W),D2
	ADD.W D1,0(A2,D2.W)
	RTS
REXI	MOVE.W (A1),D0
	ADD.W D0,D0
	MOVE.W FTABLE(PC,D0.W),D1
	MOVE.W FTABLE+2(PC,D0.W),D2
	SUB.W D1,0(A2,D2.W)
	RTS
FTABLE	DC.W 4,2
	DC.W 4,16
	DC.W 2,0
	DC.W 2,14
	DC.W 4,6
	DC.W 4,10
	DC.W 2,4
	DC.W 4,12
PTABLE	MOVEQ #0,D7
	LEA NUM(PC),A0
	MOVEA.L SCREEN,A1
	LEA SINUSVAR(PC),A2
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B (A2),D0
	MOVE.B 1(A2),D1
	LEA 2+(8*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 2(A2),D0
	MOVE.B 3(A2),D1
	LEA 2+(8*3)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 4(A2),D0
	MOVE.B 5(A2),D1
	LEA 2+(8*18)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 6(A2),D0
	MOVE.B 7(A2),D1
	LEA 2+(8*13)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 14(A2),D0
	MOVE.B 15(A2),D1
	LEA 2+(8*8)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 16(A2),D0
	MOVE.B 17(A2),D1
	LEA 2+(8*3)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 12(A2),D0
	MOVE.B 13(A2),D1
	LEA 2+(8*18)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 10(A2),D0
	MOVE.B 11(A2),D1
	LEA 2+(8*13)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #-1,D1
	LEA TBLPOSI(PC),A0
	MOVE.W -2(A0),D0
	ADDA.W 0(A0,D0.W),A1
	MOVE.W D1,(A1)
	MOVE.W D1,8(A1)
	RTS	
PNUM	LSL.W #4,D0
	LSL.W #4,D1
	LEA 0(A0,D0.W),A3
	MOVE.W (A3)+,(A4)
	MOVE.W (A3)+,(160*1)(A4)
	MOVE.W (A3)+,(160*2)(A4)
	MOVE.W (A3)+,(160*3)(A4)
	MOVE.W (A3),(160*4)(A4)
	MOVE.W D7,(160*6)(A4)
	LEA 0(A0,D1.W),A3
	MOVE.W (A3)+,8(A4)
	MOVE.W (A3)+,8+(160*1)(A4)
	MOVE.W (A3)+,8+(160*2)(A4)
	MOVE.W (A3)+,8+(160*3)(A4)
	MOVE.W (A3),8+(160*4)(A4)
	MOVE.W D7,8+(160*6)(A4)
	RTS
POSITBL	DC.W 0
TBLPOSI	DC.W 2+(8*3)+(160*6),2+(8*3)+(160*14)
	DC.W 2+(8*8)+(160*6),2+(8*8)+(160*14)
	DC.W 2+(8*13)+(160*6),2+(8*13)+(160*14)
	DC.W 2+(8*18)+(160*6),2+(8*18)+(160*14)
SINUSVAR
POSX	DC.W 0
POSY	DC.W 0
INCX	DC.W 0*2
INCY	DC.W 0*4
POCC	DC.W 0
INKC	DC.W 0*4
INDC	DC.W 0*4
INDX	DC.W 0*2
INDY	DC.W 0*4
BOR	REPT NBALLS
	DC.W 0
	ENDR
BORR	REPT NBALLS
	DC.W 0
	ENDR
CALCTR	LEA TABLE(PC),A0
	LEA (MAX*2)(A0),A1
	LEA (MAY*4)(A1),A2
	LEA SINUSVAR(PC),A4
	LEA BOR(PC),A5
	MOVEA.L SCREEN,A3
	LEA LSUM*160(A3),A3
	MOVE.L 2*2(A4),D1
	MOVE.L (A4),D0
	MOVE.W #(PI-1),D4
	SWAP D4
	MOVE.W #(PI-1),D4
	ADD.W D1,D0
	SWAP D0
	SWAP D1
	ADD.W D1,D0
	SWAP D0
	SWAP D1
	AND.L D4,D0
	MOVE.L D0,(A4)
	MOVE.W 5*2(A4),D3
	MOVE.W 4*2(A4),D1
	ADD.W D3,D1
	AND.W D4,D1
	MOVE.W D1,4*2(A4)
	MOVE.L 7*2(A4),D2
	MOVE.W 6*2(A4),D3
	MOVE.W #LBAL*16,D7
	REPT NBALLS
	BSR CLALC
	ENDR
	RTS
CLALC	ADD.W D2,D0
	AND.W D4,D0
	MOVE.W 0(A1,D0.W),D6
	MOVE.W 2(A1,D0.W),D5
	SWAP D0
	SWAP D2
	ADD.W D2,D0
	AND.W D4,D0
	ADD.W 0(A0,D0.W),D5 
	SWAP D2
	SWAP D0
	ADD.W D3,D1
	AND.W D4,D1
	ADD.W 0(A2,D1.W),D6
	ADD.W 2(A2,D1.W),D5
	CMP.W D6,D7
	BGT.S NORES
	SUB.W D7,D6
	ADDQ.W #8,D5
NORES	MOVE.W D5,(A5)+ 
	MOVE.W BALL(PC,D6.W),D6
	OR.W D6,0(A3,D5.W)
	RTS
BALL	DS.W 16
SETSIN	LEA TABLE(PC),A6
	LEA (A6),A0
	MOVE.W #MAX-1,D0
	BSR SETYSIN
	LEA (MAX*2)(A6),A0
	MOVE.W #MAY-1,D0
	BSR SETXSIN
	LEA (MAX*2)+(MAY*4)(A6),A0
	MOVE.W #GRAD-1,D0
	BSR S_XYSIN
	RTS
SETYSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	MULU #$A0,D7
	MOVE.W D7,(A0)+
	DBF D0,SETYSIN
	RTS
SETXSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	DIVU #16,D7
	MOVE.W D7,D6
	CLR.W D7
	SWAP D7
	MULU #LBAL,D7
	MOVE.W D7,(A0)+
	LSL.W #3,D6
	MOVE.W D6,(A0)+
	DBF D0,SETXSIN
	RTS
S_XYSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	DIVU #16,D7
	MOVE.W D7,D6
	CLR.W D7
	SWAP D7
	MULU #LBAL,D7
	MOVE.W D7,(A0)+
	MULU #8,D6
	MOVEQ #0,D7
	MOVE.W (A0),D7
	MULU #160,D7
	ADD.W D7,D6
	MOVE.W D6,(A0)+
	DBF D0,S_XYSIN
	RTS
NUM	DS.W 256*8
P_BALL	LEA BALL(PC),A1
	MOVE.W #$8000,D0
	MOVEQ #16-1,D1
ROTPONT	MOVE.W D0,(A1)+
	LSR.W #1,D0
	DBF D1,ROTPONT
	RTS
CLS	LEA BASE,A0
	LEA BASE+($8000)+($7D00),A1
LKJ	CLR.L (A0)+
	CMPA.L A0,A1
	BGT.S LKJ
	RTS
PRINT	LEA SET+(2*16)(PC),A2
	MOVEQ #0,D1
MOVOLOP	MOVEQ #0,D0
	MOVE.B (A0)+,D0
	BPL.S NORES1
	RTS
NORES1	TST.B D0
	BNE.S LETUSG1
	LEA 160*7(A1),A1
	BRA.S MOVOLOP
LETUSG1	BSR SCHIT
	MULU #6,D1
	LEA 0(A2,D1.W),A3
	MOVE.B (A3)+,(A1)
	MOVE.B (A3)+,160*1(A1)
	MOVE.B (A3)+,160*2(A1)
	MOVE.B (A3)+,160*3(A1)
	MOVE.B (A3)+,160*4(A1)
	MOVE.B (A3)+,160*5(A1)
SSND	MOVEQ #0,D0
	MOVE.B (A0)+,D0
	BPL.S NORES2
	RTS
NORES2	TST.B D0
	BNE.S LETUSG2
	LEA 160*7(A1),A1
	BRA.S SSND
LETUSG2	BSR SCHIT
	MULU #6,D1
	LEA 0(A2,D1.W),A3
	MOVE.B (A3)+,1(A1)
	MOVE.B (A3)+,1+(160*1)(A1)
	MOVE.B (A3)+,1+(160*2)(A1)
	MOVE.B (A3)+,1+(160*3)(A1)
	MOVE.B (A3)+,1+(160*4)(A1)
	MOVE.B (A3)+,1+(160*5)(A1)
	ADDQ.L #8,A1
	BRA.S MOVOLOP
SCHIT	LEA (A5),A3
	MOVE.W #-1,D1
SEARCH	MOVE.B (A3)+,D2
	BMI.S NOFOUND
	ADDQ.W #1,D1
	CMP.W D0,D2
	BNE.S SEARCH
NOFOUND	RTS
SETNUM	MOVE.W #256-1,D7
	LEA NUMESET(PC),A5
	LEA NUM(PC),A4
D7LOP	LEA NUMCAD(PC),A0
	LEA BASE,A1
	BSR PRINT
	LEA BASE,A1
	MOVE.W (A1),(A4)+
	MOVE.W 160*1(A1),(A4)+
	MOVE.W 160*2(A1),(A4)+
	MOVE.W 160*3(A1),(A4)+
	MOVE.W 160*4(A1),(A4)+
	MOVE.W 160*5(A1),(A4)+
	CLR.L (A4)+
	LEA NUX(PC),A0
	ADDQ.B #1,1(A0)
	CMP.B #$10,1(A0)
	BLT.S MORE
	CLR.B 1(A0)
	ADDQ.B #1,(A0)
MORE	MOVE.B (A0)+,D0
	ADD.B #'0',D0
	MOVE.B D0,NUMCAD
	MOVE.B (A0),D0
	ADD.B #'0',D0
	MOVE.B D0,NUMCAD+1
	DBF D7,D7LOP
	RTS
SSCREEN	LEA CHARSET(PC),A5
	LEA TEXT1,A0
	LEA BASE+2,A1
	BSR PRINT
	LEA TEXT1,A0
	LEA BASE+2+($8000),A1
	BSR PRINT
	RTS
SINT	MOVE.W #$2700,SR
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L $70.W,(A0)+
	MOVE.L $120.W,(A0)+
	MOVE.L $134.W,(A0)+
	MOVEM.L $FFFFF8240.W,D0-D7
	MOVEM.L D0-D7,(A0)
	LEA 8*4(A0),A0
	MOVE.B 7(A1),(A0)+
	MOVE.B 9(A1),(A0)+
	MOVE.B $13(A1),(A0)+
	MOVE.B $17(A1),(A0)+
	MOVE.B $19(A1),(A0)+
	MOVE.B $1F(A1),(A0)+
	CLR.B 7(A1)
	CLR.B 9(A1)
	CLR.B $13(A1)
	CLR.B $19(A1)
	MOVE.B #0,$FFFFFA19.W
	MOVE.B #82,$FFFFFA1F.W
	MOVE.B #1,$FFFFFA19.W
	BCLR #3,$FFFFFA17.W
	MOVE.L #AMIGA,$134.W
	MOVE.L #HBL,$120.W
	MOVE.L #VBL,$70.W
	OR.B #%00100001,$13(A1)
	OR.B #%00100001,7(A1)
	LEA SAMVBL,A6
	MOVE.W #$2300,SR
	RTS
GINT	MOVE.W #$2700,SR
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L (A0)+,$70.W
	MOVE.L (A0)+,$120.W
	MOVE.L (A0)+,$134.W
	MOVEM.L (A0)+,D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
	MOVE.B (A0)+,7(A1)
	MOVE.B (A0)+,9(A1)
	MOVE.B (A0)+,$13(A1)
	MOVE.B (A0)+,$17(A1)
	MOVE.B (A0)+,$19(A1)
	MOVE.B (A0)+,$1F(A1)
	MOVE.W #$2300,SR
	RTS
VBL	MOVEA.L DIRB,A6
	MOVE.W #CTABLE-(IND+2),IND+2
	CLR.B $FFFFFA1B.W
	MOVE.B #LSUM,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	ST SYNC
	RTE
HBL	MOVE.L A0,-(A7)
IND	LEA CTABLE(PC),A0
	MOVE.W (A0),$FFFF8242.W
	CLR.B $FFFFFA1B.W
	MOVE.B 3(A0),$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	ADDQ.W #4,IND+2
	MOVE.L (A7)+,A0
	BCLR #0,$FFFFFA0F.W
	RTE
CTABLE	DC.W $333,4
	DC.W $444,8
	DC.W $555,16
	DC.W $666,32
	DC.W $777,200-(LSUM+(2*(4+8+16+32)))
	DC.W $666,32
	DC.W $555,16
	DC.W $444,8
	DC.W $333,4
MUZAK	BRA PREPARE
	BRA P_ROUT
PREPARE	BSR PREPAM
	BSR INITMU
	BSR PLAYMU
	RTS
PREPAM	LEA INS(PC),A0
	MOVEQ #(32*4)-1,D0
CLR_INS CLR.L (A0)+
	DBF D0,CLR_INS
	LEA VOICE0,A0
	BSR CLRV
	LEA VOICE1,A0
	BSR CLRV
	LEA VOICE2,A0
	BSR CLRV
	LEA VOICE3,A0
CLRV	MOVEQ #7,D0
CLRVV	CLR.L (A0)+
	DBF D0,CLRVV
	RTS
INITMU	LEA SEQ(PC),A0
	LEA PAT(PC),A1
	LEA NBR_INS(PC),A2
	LEA MUZEXX(PC),A3
	MOVE #$1D8,(A0)
	MOVE #$258,(A1)
	MOVE #15,(A2)
	CMP.L #'M.K.',$438(A3)
	BNE.S RDOC
	MOVE #$3B8,(A0)
	MOVE #$43C,(A1)
	MOVE #31,(A2)
RDOC	LEA MUZEXX(PC),A0
	ADDA.W SEQ(PC),A0
	MOVE.L #$80,D0
	MOVEQ #0,D1
INITMU1	MOVE.L D1,D2
	SUBQ #1,D0
INITMU2	MOVE.B (A0)+,D1
	CMP.B D2,D1
	BGT.S INITMU1
	DBF D0,INITMU2
	ADDQ.B #1,D2
	SWAP D2
	LSR.L #6,D2
	LEA MUZEXX(PC),A0
	ADD.W PAT,A0
	ADD.L D2,A0
	LEA 20+MUZEXX(PC),A1
	LEA 16+INS(PC),A2
	MOVE.W NBR_INS(PC),D0
	SUBQ #1,D0
INITMU3	MOVE.L A0,4(A2)
	MOVEQ #0,D1
	MOVE 22(A1),D1
	LSL.L #1,D1
	MOVE.L D1,(A2)
	ADD.L D1,A0
	MOVEQ #0,D1
	MOVE 24(A1),D1
	BEQ.S INITMU4
	SUBQ #1,D1
INITMU4	MOVE D1,12(A2)
	MOVEQ #0,D1
	MOVE 28(A1),D1
	LSL.L #1,D1
	CMP.L #2,D1
	BNE.S INITMU5
	MOVEQ #0,D1
INITMU5	SWAP D1
	MOVE.L D1,8(A2)
	LEA 30(A1),A1
	LEA 16(A2),A2
	DBF D0,INITMU3
	LEA 16+INS(PC),A0
	LEA EPRG,A2
	MOVE NBR_INS(PC),D0
	SUBQ #1,D0
REVERSE	MOVE.L	(A0),D1
	BEQ.S ENDREV
	SUBQ.L #1,D1
	MOVE.L D1,D2
	MOVE.L 4(A0),A3
REV_1	MOVE.B (A3)+,D7
	ADD.B #$80,D7
	LSR.B #2,D7
	SUBI.B #$20,D7
	MOVE.B D7,(A2)+
	DBF D1,REV_1
	MOVE.L 4(A0),A3
REV_2	MOVE.B -(A2),(A3)+
	DBF D2,REV_2
ENDREV	LEA 16(A0),A0
	DBF D0,REVERSE
	RTS
PLAYMU	MOVEQ #5,D0
CL_LOOP	MOVE.B D0,$FFFF8800.W
	MOVE.B #0,$FFFF8802.W
	DBF D0,CL_LOOP
	MOVE.B #7,$FFFF8800.W
	MOVE.B #$FF,$FFFF8802.W
	MOVE.B #8,$FFFF8800.W
	MOVE.B #0,$FFFF8802.W
	MOVE.B #9,$FFFF8800.W
	MOVE.B #0,$FFFF8802.W
	MOVE.B #10,$FFFF8800.W
	MOVE.B #0,$FFFF8802.W
ON	MOVE.W #$2700,SR
	MOVE.W #6,SPD+2
	MOVE.B #6,SPEED
	MOVE.B #1,POS
	LEA MUZEXX(PC),A0
	ADD SEQ(PC),A0
	LEA -2(A0),A0
	MOVE.B (A0)+,TRK
	MOVE.L A0,MUS+2
	CLR.L V0+2
	CLR.L V1+2
	CLR.L V2+2
	CLR.L V3+2
	CLR.L F0+2
	CLR.L F1+2
	CLR.L F2+2
	CLR.L F3+2
	RTS
	
;AMIGA SOUND CHIP
AMIGA	MOVE.L D4,-(A7)
	MOVE.L A0,USP
	MOVE.W (A6),D4
	LEA $FFFF8800.W,A0
	MOVE.L SOUND(PC,D4.W),D4
	MOVEP.L D4,(A0)
	MOVE.W (A6)+,D4
	MOVE.W SOUND+4(PC,D4.W),D4
	MOVEP.W D4,(A0)
	MOVE.L USP,A0
	MOVE.L (A7)+,D4
	RTE							;20(5/0)
SOUND	DC.W	$80C,$90B,$A09,0,$80C,$90B,$A09,0
	DC.W	$80D,$908,$A08,0,$80B,$90B,$A0B,0
	DC.W	$80D,$909,$A05,0,$80C,$90B,$A08,0
	DC.W	$80D,$909,$A02,0,$80D,$908,$A06,0
	DC.W	$80C,$90B,$A07,0,$80D,$907,$A07,0
	DC.W	$80C,$90B,$A06,0,$80C,$90A,$A09,0
	DC.W	$80B,$90B,$A0A,0,$80C,$90B,$A02,0
	DC.W	$80C,$90B,$A00,0,$80C,$90A,$A08,0
	DC.W	$80D,$906,$A04,0,$80D,$905,$A05,0
	DC.W	$80D,$905,$A04,0,$80C,$909,$A09,0
	DC.W	$80D,$904,$A03,0,$80B,$90B,$A09,0
	DC.W	$80C,$90A,$A05,0,$80B,$90A,$A0A,0
	DC.W	$80C,$909,$A08,0,$80B,$90B,$A08,0
	DC.W	$80C,$90A,$A00,0,$80C,$90A,$A00,0
	DC.W	$80C,$909,$A07,0,$80B,$90B,$A07,0
	DC.W	$80C,$909,$A06,0,$80B,$90B,$A06,0
	DC.W	$80B,$90A,$A09,0,$80B,$90B,$A05,0
	DC.W	$80A,$90A,$A0A,0,$80B,$90B,$A02,0
	DC.W	$80B,$90A,$A08,0,$80C,$907,$A07,0
	DC.W	$80C,$908,$A04,0,$80C,$907,$A06,0
	DC.W	$80B,$909,$A09,0,$80C,$906,$A06,0
	DC.W	$80A,$90A,$A09,0,$80C,$907,$A03,0
	DC.W	$80B,$90A,$A05,0,$80B,$909,$A08,0
	DC.W	$80B,$90A,$A03,0,$80A,$90A,$A08,0
	DC.W	$80B,$90A,$A00,0,$80B,$909,$A07,0
	DC.W	$80B,$908,$A08,0,$80A,$90A,$A07,0
	DC.W	$80A,$909,$A09,0,$80C,$901,$A01,0
	DC.W	$80A,$90A,$A06,0,$80B,$908,$A07,0
	DC.W	$80A,$90A,$A05,0,$80A,$909,$A08,0
	DC.W	$80A,$90A,$A02,0,$80A,$90A,$A01,0
	DC.W	$80A,$90A,$A00,0,$809,$909,$A09,0
	DC.W	$80A,$908,$A08,0,$80B,$908,$A01,0
	DC.W	$80A,$909,$A06,0,$80B,$907,$A04,0
	DC.W	$80A,$909,$A05,0,$809,$909,$A08,0
	DC.W	$80A,$909,$A03,0,$80A,$908,$A06,0
	DC.W	$80A,$909,$A00,0,$809,$909,$A07,0
	DC.W	$809,$908,$A08,0,$80A,$908,$A04,0
	DC.W	$809,$909,$A06,0,$80A,$908,$A01,0
	DC.W	$809,$909,$A05,0,$809,$908,$A07,0
	DC.W	$808,$908,$A08,0,$809,$909,$A02,0
	DC.W	$809,$908,$A06,0,$809,$909,$A00,0
	DC.W	$809,$907,$A07,0,$808,$908,$A07,0
	DC.W	$809,$907,$A06,0,$809,$908,$A02,0
	DC.W	$808,$908,$A06,0,$809,$906,$A06,0
	DC.W	$808,$907,$A07,0,$808,$908,$A04,0
	DC.W	$808,$907,$A06,0,$808,$908,$A02,0
	DC.W	$807,$907,$A07,0,$808,$906,$A06,0
	DC.W	$808,$907,$A04,0,$807,$907,$A06,0
	DC.W	$808,$906,$A05,0,$808,$906,$A04,0
	DC.W	$807,$906,$A06,0,$807,$907,$A04,0
	DC.W	$808,$905,$A04,0,$806,$906,$A06,0
	DC.W	$807,$906,$A04,0,$807,$905,$A05,0
	DC.W	$806,$906,$A05,0,$806,$906,$A04,0
	DC.W	$806,$905,$A05,0,$806,$906,$A02,0
	DC.W	$806,$905,$A04,0,$805,$905,$A05,0
	DC.W	$806,$905,$A02,0,$805,$905,$A04,0
	DC.W	$805,$904,$A04,0,$805,$905,$A02,0
	DC.W	$804,$904,$A04,0,$804,$904,$A03,0
	DC.W	$804,$904,$A02,0,$804,$903,$A03,0
	DC.W	$803,$903,$A03,0,$803,$903,$A02,0
	DC.W	$803,$902,$A02,0,$802,$902,$A02,0
	DC.W	$802,$902,$A01,0,$801,$901,$A01,0
	DC.W	$802,$901,$A00,0,$801,$901,$A00,0
	DC.W	$801,$900,$A00,0,$800,$900,$A00,0
	DC.W	$80E,$90D,$A0C,0,$80F,$903,$A00,0
	DC.W	$80F,$903,$A00,0,$80F,$903,$A00,0
	DC.W	$80F,$903,$A00,0,$80F,$903,$A00,0
	DC.W	$80F,$903,$A00,0,$80E,$90D,$A0B,0
	DC.W	$80E,$90D,$A0B,0,$80E,$90D,$A0B,0
	DC.W	$80E,$90D,$A0B,0,$80E,$90D,$A0B,0
	DC.W	$80E,$90D,$A0B,0,$80E,$90D,$A0B,0
	DC.W	$80E,$90D,$A0A,0,$80E,$90D,$A0A,0
	DC.W	$80E,$90D,$A0A,0,$80E,$90D,$A0A,0
	DC.W	$80E,$90C,$A0C,0,$80E,$90D,$A00,0
	DC.W	$80D,$90D,$A0D,0,$80D,$90D,$A0D,0
	DC.W	$80D,$90D,$A0D,0,$80D,$90D,$A0D,0
	DC.W	$80D,$90D,$A0D,0,$80D,$90D,$A0D,0
	DC.W	$80E,$90C,$A0B,0,$80E,$90C,$A0B,0
	DC.W	$80E,$90C,$A0B,0,$80E,$90C,$A0B,0
	DC.W	$80E,$90C,$A0B,0,$80E,$90C,$A0B,0
	DC.W	$80E,$90C,$A0B,0,$80E,$90C,$A0B,0
	DC.W	$80E,$90C,$A0A,0,$80E,$90C,$A0A,0
	DC.W	$80E,$90C,$A0A,0,$80E,$90C,$A0A,0
	DC.W	$80D,$90D,$A0C,0,$80D,$90D,$A0C,0
	DC.W	$80E,$90C,$A09,0,$80E,$90C,$A09,0
	DC.W	$80E,$90C,$A05,0,$80E,$90C,$A00,0
	DC.W	$80E,$90C,$A00,0,$80E,$90B,$A0B,0
	DC.W	$80E,$90B,$A0B,0,$80E,$90B,$A0B,0
	DC.W	$80E,$90B,$A0B,0,$80E,$90B,$A0A,0
	DC.W	$80E,$90B,$A0A,0,$80E,$90B,$A0A,0
	DC.W	$80D,$90D,$A0B,0,$80D,$90D,$A0B,0
	DC.W	$80D,$90D,$A0B,0,$80E,$90B,$A09,0
	DC.W	$80E,$90B,$A09,0,$80E,$90B,$A09,0
	DC.W	$80D,$90C,$A0C,0,$80D,$90D,$A0A,0
	DC.W	$80E,$90B,$A07,0,$80E,$90B,$A00,0
	DC.W	$80E,$90B,$A00,0,$80D,$90D,$A09,0
	DC.W	$80D,$90D,$A09,0,$80E,$90A,$A09,0
	DC.W	$80D,$90D,$A08,0,$80D,$90D,$A07,0
	DC.W	$80D,$90D,$A04,0,$80D,$90D,$A00,0
	DC.W	$80E,$90A,$A04,0,$80E,$909,$A09,0
	DC.W	$80E,$909,$A09,0,$80D,$90C,$A0B,0
	DC.W	$80E,$909,$A08,0,$80E,$909,$A08,0
	DC.W	$80E,$909,$A07,0,$80E,$908,$A08,0
	DC.W	$80E,$909,$A01,0,$80C,$90C,$A0C,0
	DC.W	$80D,$90C,$A0A,0,$80E,$908,$A06,0
	DC.W	$80E,$907,$A07,0,$80E,$908,$A00,0
	DC.W	$80E,$907,$A05,0,$80E,$906,$A06,0
	DC.W	$80D,$90C,$A09,0,$80E,$905,$A05,0
	DC.W	$80E,$904,$A04,0,$80D,$90C,$A08,0
	DC.W	$80D,$90B,$A0B,0,$80E,$900,$A00,0
	DC.W	$80D,$90C,$A06,0,$80D,$90C,$A05,0
	DC.W	$80D,$90C,$A02,0,$80C,$90C,$A0B,0
	DC.W	$80C,$90C,$A0B,0,$80D,$90B,$A0A,0
	DC.W	$80D,$90B,$A0A,0,$80D,$90B,$A0A,0
	DC.W	$80D,$90B,$A0A,0,$80C,$90C,$A0A,0
	DC.W	$80C,$90C,$A0A,0,$80C,$90C,$A0A,0
	DC.W	$80D,$90B,$A09,0,$80D,$90B,$A09,0
	DC.W	$80D,$90A,$A0A,0,$80D,$90A,$A0A,0
	DC.W	$80D,$90A,$A0A,0,$80C,$90C,$A09,0
	DC.W	$80C,$90C,$A09,0,$80C,$90C,$A09,0
	DC.W	$80D,$90B,$A06,0,$80C,$90B,$A0B,0
	DC.W	$80C,$90C,$A08,0,$80D,$90B,$A00,0
	DC.W	$80D,$90B,$A00,0,$80C,$90C,$A07,0
	DC.W	$80C,$90C,$A06,0,$80C,$90C,$A05,0
	DC.W	$80C,$90C,$A03,0,$80C,$90C,$A01,0
	DC.W	$80C,$90B,$A0A,0,$80D,$90A,$A05,0
	DC.W	$80D,$90A,$A04,0,$80D,$90A,$A02,0
	DC.W	$80D,$909,$A08,0,$80D,$909,$A08,0
P_ROUT	MOVEM.L REX,D0-A5
	SUBQ.B	#1,SPEED
	BEQ.S	PLAY
	JSR EFFECT
END_VBL	JSR SYNTH
	MOVEM.L D0-A5,REX
	RTS
REX	DS.L 8
	DC.L OFF
	DC.L OFF
	DC.L OFF
	DC.L OFF
	DS.L 2
PLAY	MOVEM.L	D0-D1/A0-A5,-(SP)
SPD	MOVE.B	#6,SPEED
	SUBQ.B	#1,POS
	BNE.S NOPAT
	MOVE.B #64,POS
	ADDQ.L #1,MUS+2
	SUBQ.B #1,TRK
	BMI RESTART
	MOVEQ #0,D0
MUS	MOVE.B $0,D0
	SWAP D0
	LSR.L #6,D0
	LEA MUZEXX(PC),A0
	ADD PAT(PC),A0
	ADD.L D0,A0
	MOVE.L A0,ADD_IN_PAT
NOPAT	MOVE.L ADD_IN_PAT(PC),A0
	LEA FRQ(PC),A1
	LEA INS(PC),A2
	LEA COMMAND(PC),A3
	LEA VOICE0(PC),A4
	BSR LOAD_VOICE
	LEA VOICE1(PC),A4
	BSR LOAD_VOICE
	LEA VOICE2(PC),A4
	BSR LOAD_VOICE
	LEA VOICE3(PC),A4
	BSR LOAD_VOICE
	MOVE.L A0,ADD_IN_PAT
	MOVEM.L (SP)+,D0-D1/A0-A5
	MOVEM.L	D4/A5,-(SP)
	LEA VOICE0(PC),A5
	TST.B 20(A5)
	BEQ.S CONT0
	MOVE.L (A5),D0
	MOVE.L 4(A5),A0
	MOVE.L 8(A5),D4
	MOVE.L D4,L0+2
	MOVE.L 12(A5),D4
	MOVE.L D4,V0+2
	MOVE.L 16(A5),D4
	MOVE.L D4,F0+2
CONT0	CLR.B 20(A5)
	LEA VOICE1(PC),A5
	TST.B 20(A5)
	BEQ.S CONT1
	MOVE.L (A5),D1
	MOVE.L 4(A5),A1
	MOVE.L 8(A5),D4
	MOVE.L D4,L1+2
	MOVE.L 12(A5),D4
	MOVE.L D4,V1+2
	MOVE.L 16(A5),D4
	MOVE.L D4,F1+2
CONT1	CLR.B 20(A5)
	LEA VOICE2(PC),A5
	TST.B 20(A5)
	BEQ.S CONT2
	MOVE.L (A5),D2
	MOVE.L 4(A5),A2
	MOVE.L 8(A5),D4
	MOVE.L D4,L2+2
	MOVE.L 12(A5),D4
	MOVE.L D4,V2+2
	MOVE.L 16(A5),D4
	MOVE.L D4,F2+2
CONT2	CLR.B 20(A5)
	LEA VOICE3(PC),A5
	TST.B 20(A5)
	BEQ.S CONT3
	MOVE.L (A5),D3
	MOVE.L 4(A5),A3
	MOVE.L 8(A5),D4
	MOVE.L D4,L3+2
	MOVE.L 12(A5),D4
	MOVE.L D4,V3+2
	MOVE.L 16(A5),D4
	MOVE.L D4,F3+2
CONT3	CLR.B 20(A5)
	MOVEM.L	(SP)+,D4/A5
	BRA END_VBL
LOAD_VOICE
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE	D0,30(A4)
	MOVE	(A0)+,D0
	BEQ.S	WCOMAND
	BTST	#12,D0
	BEQ.S	CONT_FRQ
	AND		#$FFF,D0
	MOVE	#$100,D1
CONT_FRQ
	MOVE.B	#1,20(A4)
	MOVE	D0,24(A4)
	ADD		D0,D0
	ADD		D0,D0
	MOVE.L (A1,D0.W),D0
	MOVE.L D0,12(A4)
	TST.L 16(A4)
	BEQ.S CONTL
	MOVE.L D0,16(A4)
CONTL	OR.B (A0),D1
	AND #$FF0,D1
	BEQ.S WCOMAND
	MOVE.L 12(A4),16(A4)
	MOVE.L 0(A2,D1.W),(A4)
	MOVE.L 4(A2,D1.W),4(A4)
	MOVE.L 8(A2,D1.W),8(A4)
	BNE.S REPEAT
	CLR.L 16(A4)
REPEAT
WCOMAND	MOVE (A0)+,D0
	MOVE.B D0,D1
	AND.W #$F00,D0
	LSR #6,D0
	MOVE.L (A3,D0.W),A5
	JMP (A5)
NCOMAND	RTS
ARPG	TST.B D1
	BEQ.S NARPG
	MOVE.B #0,22(A4)
	MOVE.B D1,23(A4)
	MOVE.B #1,21(A4)		*ARPEGGIO COUNTER
	MOVE #1,30(A4)
NARPG	RTS
P_UP	MOVE.B	#1,22(A4)
	MOVE.B	D1,23(A4)
	MOVE	#1,30(A4)
	RTS
P_DOWN	MOVE.B	#2,22(A4)
	MOVE.B	D1,23(A4)
	MOVE	#1,30(A4)
	RTS
POSJUMP	LEA MUZEXX(PC),A5
	ADD.W SEQ(PC),A5
	LEA -1(A5),A5
	MOVE.B #1,POS
	MOVE.L A5,D0
	ADD.L D1,D0
	MOVE.L D0,MUS+2
	MOVE.B -1(A5),D0
	SUB.W D1,D0
	MOVE.B D0,TRK
	RTS
SETVOL	TST.B	D1
	BNE.S	NCHANGE			*NO REAL TIME VOLUME VARIATION
	CLR.L	12(A4)				*IN THIS VERSION! MAYBE
	MOVE.B	#1,20(A4)			*SOME OTHER DAY...
NCHANGE	RTS
P_BREAK	MOVE.B	#1,POS
	RTS
SETFILT	RTS
S_SPEED	MOVE.B	D1,SPD+3
	MOVE.B	D1,SPEED
	RTS
COMMAND	DC.L ARPG,P_UP,P_DOWN,NCOMAND
	DC.L NCOMAND,NCOMAND,NCOMAND,NCOMAND
	DC.L NCOMAND,NCOMAND,NCOMAND,POSJUMP
	DC.L SETVOL,P_BREAK,SETFILT,S_SPEED
EFFECT	MOVEM.L	D4-D6/A0/A4-A5,-(SP)
	LEA FRQ(PC),A5
	LEA VOICE0(PC),A0
	TST 30(A0)
	BEQ.S CONTE
	BSR DOEFF
	MOVE.L	26(A0),V0+2
	TST.L	F0+2
	BEQ.S	CONTE
	MOVE.L	26(A0),F0+2
CONTE	LEA		VOICE1(PC),A0
	TST		30(A0)
	BEQ.S	CONT_EFFECT2
	BSR		DOEFF
	MOVE.L	26(A0),V1+2
	TST.L	F1+2
	BEQ.S	CONT_EFFECT2
	MOVE.L	26(A0),F1+2
CONT_EFFECT2
	LEA		VOICE2(PC),A0
	TST		30(A0)
	BEQ.S	CONT_EFFECT3
	BSR		DOEFF
	MOVE.L	26(A0),V2+2
	TST.L	F2+2
	BEQ.S	CONT_EFFECT3
	MOVE.L	26(A0),F2+2
CONT_EFFECT3
	LEA		VOICE3(PC),A0
	TST		30(A0)
	BEQ.S	CONT_EFFECT4
	BSR		DOEFF
	MOVE.L	26(A0),V3+2
	TST.L	F3+2
	BEQ.S	CONT_EFFECT4
	MOVE.L	26(A0),F3+2
CONT_EFFECT4
	MOVEM.L	(SP)+,D4-D6/A0/A4-A5
	RTS
DOEFF	MOVE.B	22(A0),D4
	BEQ.S	ARPEGGIO_ROUT
	CMP.B	#1,D4
	BEQ.S	PORTUP
	CMP.B	#2,D4
	BEQ.S	PORTDOWN
	RTS
PORTUP	MOVEQ	#0,D4
	MOVE.B	23(A0),D4
	MOVE	24(A0),D5
	SUB		D4,D5
	CMP		#$71,D5
	BPL.S	OK_PORTUP
	MOVEQ	#$71,D5
OK_PORTUP
	MOVE	D5,24(A0)
	ADD		D5,D5
	ADD		D5,D5
	MOVE.L	(A5,D5),26(A0)
	RTS
PORTDOWN
	MOVEQ	#0,D4
	MOVE.B	23(A0),D4
	MOVE	24(A0),D5
	ADD		D4,D5
	CMP		#$358,D5
	BMI.S	OK_PORTDOWN
	MOVE	#$358,D5
OK_PORTDOWN
	MOVE	D5,24(A0)
	ADD		D5,D5
	ADD		D5,D5
	MOVE.L	(A5,D5),26(A0)
	RTS
ARPEGGIO_ROUT
	MOVE.B	21(A0),D4
	CMP.B	#1,D4
	BEQ.S	ARP_ROUT1
	CMP.B	#2,D4
	BEQ.S	ARP_ROUT2
	CMP.B	#3,D4
	BEQ.S	ARP_ROUT3
	CMP.B	#4,D4
	BEQ.S	ARP_ROUT1
	CMP.B	#5,D4
	BEQ.S	ARP_ROUT2
	RTS
ARP_ROUT1
	MOVEQ	#0,D4
	MOVE.B	23(A0),D4
	LSR.B	#4,D4
	BRA.S	ARP_ROUT
ARP_ROUT2
	MOVEQ	#0,D4
	MOVE.B	23(A0),D4
	AND.B	#$0F,D4
	BRA.S	ARP_ROUT
ARP_ROUT3
	MOVE	24(A0),D6
	BRA.S	END_ARP_ROUT2
ARP_ROUT
	ADD		D4,D4
	MOVE	24(A0),D5
	LEA		ARPEGGIO_DATA(PC),A4
ARP_LOOP
	CMP		(A4),D5
	BEQ.S	END_ARP_ROUT1
	LEA		2(A4),A4
	BRA.S	ARP_LOOP
END_ARP_ROUT1
	MOVE	(A4,D4),D6
END_ARP_ROUT2
	ADD		D6,D6
	ADD		D6,D6
	MOVE.L	(A5,D6),26(A0)
	ADDQ.B	#1,21(A0)
	RTS
RESTART
	MOVEM.L	(SP)+,D0-D1/A0-A5
	MOVE	#6,SPD+2 
	MOVE.B	#6,SPEED
	MOVE.B	#1,POS
	LEA		MUZEXX,A0
	ADD		SEQ,A0
	LEA		-2(A0),A0
	MOVE.B	(A0)+,TRK
	MOVE.L	A0,MUS+2
	LEA		OFF,A0
	LEA		OFF,A1
	LEA		OFF,A2
	LEA		OFF,A3
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	CLR.L	V0+2
	CLR.L	V1+2
	CLR.L	V2+2
	CLR.L	V3+2
	CLR.L	F0+2
	CLR.L	F1+2
	CLR.L	F2+2
	CLR.L	F3+2
	BRA		PLAY
BVBL	EQU 7500/50 ;(10KHZ/50HZ)	
INCSAM	DC.W 0
SYNTH	EOR.W #BVBL*2,INCSAM
	MOVE.W INCSAM,D6
	LEA SAMVBL(PC),A5
	LEA 0(A5,D6.W),A5
V0	MOVE.L #0,D5
V1	MOVE.L #0,D6
	MOVE.W #BVBL-1,D7
GENSAM	SWAP	D0
	SWAP	D1
	SWAP	D2
	SWAP	D3
AV0	SUB.L	D5,D0
	BMI.S	L0
AV1	SUB.L	D6,D1
	BMI.S	L1
V2	SUB.L	#0,D2
	BMI.S	L2
V3	SUB.L	#0,D3
	BMI.S	L3
OUT	SWAP	D0					;4(1/0)
	SWAP	D1					;4(1/0)
	SWAP	D2					;4(1/0)
	SWAP	D3					;4(1/0)
	MOVEQ #0,D4
	MOVE.B 0(A0,D0.W),D4			;14(3/0)
	ADD.B  0(A1,D1.W),D4
	ADD.B  0(A2,D2.W),D4			;14(3/0)
	ADD.B  0(A3,D3.W),D4			;14(3/0)
	LSL.W #3,D4
	MOVE.W D4,(A5)+
	DBF D7,GENSAM
	LEA -BVBL*2(A5),A5
	MOVE.L A5,DIRB
	RTS
L0	MOVE.L	#0,D0
F0	MOVE.L	#0,V0+2
	MOVE.L F0+2,D5
	BRA.S AV1
L1	MOVE.L	#0,D1
F1	MOVE.L	#0,V1+2
	MOVE.L F1+2,D6
	BRA.S V2
L2	MOVE.L	#0,D2
F2	MOVE.L	#0,V2+2
	BRA.S V3
L3	MOVE.L	#0,D3
F3	MOVE.L	#0,V3+2
	BRA OUT
DIRB	DC.L SAMVBL
SAMVBL	DS.W BVBL*2
INTS	DS.L 11
	DS.B 6
SYNC	DS.B 2
SCREEN	DC.L BASE
OFF	DC.L	0
SPEED	DC.B	0
POS	DC.B	0
TRK	DC.B	0
SEQ	DS.W	1
PAT	DS.W	1
NBR_INS	DS.W	1
FRQ	INCBIN	'7,5_KHZ.FRQ',0
ARPEGGIO_DATA	
	DC.W	$0358,$0328,$02FA,$02D0,$02A6,$0280,$025C
	DC.W	$023A,$021A,$01FC,$01E0,$01C5,$01AC,$0194,$017D
	DC.W	$0168,$0153,$0140,$012E,$011D,$010D,$00FE,$00F0
	DC.W	$00E2,$00D6,$00CA,$00BE,$00B4,$00AA,$00A0,$0097
	DC.W	$008F,$0087,$007F,$0078,$0071,$0000,$0000,$0000
VOICE0	DS.L	8
VOICE1	DS.L	8
VOICE2	DS.L	8
VOICE3	DS.L	8
ADD_IN_PAT	DS.L	1
INS	DS.L	32*4
SET	INCBIN 'CHARSET.BIN'
CHARSET	DC.B 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789[]$%/\@*()-+=:"!,.?>< ',-1
NUMESET	DC.B '9'+1,'9'+2,'9'+3,'9'+4,'9'+5,'9'+6,'GHIJKLMNOPQRSTUVWXYZ0123456789',-1
NUX	DC.B 0,0 
NUMCAD	DC.B '00',-1,0
TEXT1	DC.B ' XPOS:     YPOS:     XINC:     YINC:    ',0
	DC.B ' XIND:     YIND:     ZINC:     ZIND:    ',-1
MUZEXX	INCBIN 'OH-NO.MOD'
EPRG


