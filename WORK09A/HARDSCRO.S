** IT WORKS!!!!!!!!!!!!!!!!!!!!!!!
** WOW, ESTA ES LA RUTINA DE HARDWARE
** SCROLLER PARA EL ATARI ST! ESTA
** VEZ ES HORIZONTAL... EL FUNCIONAMIENTO
** ES UN POCO MAS COMPLICADO QUE MI
** ULTIMO HARDWARE SCROLLER (VERTICAL)
** PERO NO POR ELLO ES IMPOSIBLE DE
** ENTENDER... ME EXPLICO: LA LONGITUD
** EN BYTES DE UNA LINEA DE SCAN NORMAL
** ES $A0, DE UNA CON OVERSCAN POR LA
** DERECHA ES $CC Y CON LOS DOS BORDES
** ES $E6, ADEMAS LAS DOS PRIMERAS LINEAS
** SI HACEMOS OVERSCAN POR LOS DOS LADOS
** SON $158 (CREO) Y LA SEGUNDA DE ESTAS
** PERTENECE AL OVERSCAN DE $E6 (TOTAL)
** POR LO QUE HE DE AUMENTAR 1 EN LAS
** LINEAS REALES DE OVERSCAN. UNA VEZ 
** ENTENDIDO ESTO MAS O MENOS, HEMOS DE 
** CONSEGUIR QUE EL PRINCIPIO DE LA 
** PANTALLA SEA $...08,$10,$18 Y DEMAS,
** ESTO SE HACE PONIENDO LINEAS DE FULL
** SCREEN CALCULANDO SU LONGITUD EN BYTES,
** Y AL RESTAR UN DATO DE FORMA $XX.. EN
** LA DIRECCION DE PANTALLA (VIDEO BASE BAJA)
** OBTENEMOS EL EFECTO DEL DESEADO SCROLL!

** SI NO LO HAS ENTENDIDO DEL TODO ME LO DICES:
** RED DEVIL, APTO 566, 03080, ALICANTE

* (C) TODAS LAS RUTINAS EXCEPTO LAS DOS DE
** FULLSCREEN: RED DEVIL!!!!!!!!!!!!!

	CLR.L -(A7)
	MOVE.W #$20,-(A7)
	TRAP #1
	LEA $D0000,A0
	LEA $F8000+$7D00,A1
SS	CLR.L (A0)+
	CLR.L (A0)+
	CMPA.L A0,A1
	BGT.S SS
	LEA PIC+34(PC),A0
	LEA $D8000+($1300)+(60*160),A1
	LEA $D0000+($1300)+(60*160),A2
	MOVE.W #((131*160)/8)-1,D0
KKH	MOVE.L (A0),(A1)+
	MOVE.L 4(A0),(A1)+
	MOVE.L (A0)+,(A2)+
	MOVE.L (A0)+,(A2)+
	DBF D0,KKH
	MOVEQ #8-1,D2
D2L	LEA $D0000+($1300)+(60*160),A2
	MOVE.W #131-1,D0
D0L	MOVE.W #0,CCR
	MOVEQ #4-1,D1
D1L	ROXR 8*0(A2)
	ROXR 8*1(A2)
	ROXR 8*2(A2)
	ROXR 8*3(A2)
	ROXR 8*4(A2)
	ROXR 8*5(A2)
	ROXR 8*6(A2)
	ROXR 8*7(A2)
	ROXR 8*8(A2)
	ROXR 8*9(A2)
	ROXR 8*10(A2)
	ROXR 8*11(A2)
	ROXR 8*12(A2)
	ROXR 8*13(A2)
	ROXR 8*14(A2)
	ROXR 8*15(A2)
	ROXR 8*16(A2)
	ROXR 8*17(A2)
	ROXR 8*18(A2)
	ROXR 8*19(A2)
	ADDQ.L #2,A2
	DBF D1,D1L
	LEA 160-(4*2)(A2),A2
	DBF D0,D0L 
	DBF D2,D2L
	MOVEM.L $FFFF8240.W,D0-D7
	MOVEM.L D0-D7,OLDCOL
	BSR SINT
VSYNC	CLR.B SYNC
WAIT	TST.B SYNC
	BEQ.S WAIT
	MOVEM.L PIC+2,D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
	MOVEA.L CHSC,A0
	MOVE.L (A0)+,CONTLR
	MOVE.L SCREEN,D0
	BCHG #15,D0
	MOVE.L D0,SCREEN
	MOVE.L (A0),D1
	SUB.L D1,D0
	LSR.L #8,D0
	MOVE.B D0,$FFFF8203.W
	LSR.W #8,D0
	MOVE.B D0,$FFFF8201.W
	ADD.L #8,CHSC
	MOVE.W 4(A0),D0
	BPL.S SISCRL
	MOVE.L #SCDATA,CHSC
SISCRL	CMP.B #$39,$FFFFFC02.W
	BNE.S VSYNC
	BSR RINT
	MOVEM.L OLDCOL,D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
	CLR.L -(A7)
	TRAP #1
OLDCOL	DS.W 16
CDOL	DS.W 1
SCREEN 	DC.L $D8000+($1300)
SINT	MOVE.W #$2700,SR
	LEA INTS,A0
	MOVE.L $70.W,(A0)+
	MOVE.B $FFFFFA07.W,(A0)+
	MOVE.B $FFFFFA09.W,(A0)+
	MOVE.B $FFFF8260.W,(A0)+
	MOVE.B $FFFF820A.W,(A0)+
	MOVE.W $FFFF8240.W,(A0)+
	CLR.B $FFFFFA07.W
	CLR.B $FFFFFA09.W
	MOVE.L #FULLVBL,$70.W
	MOVE.W #$2300,SR
	RTS
RINT	MOVE.W #$2700,SR
	LEA INTS,A0
	MOVE.L (A0)+,$70.W
	MOVE.B (A0)+,$FFFFFA07.W
	MOVE.B (A0)+,$FFFFFA09.W
	MOVE.B (A0)+,$FFFF8260.W
	MOVE.B (A0)+,$FFFF820A.W
	MOVE.W (A0)+,$FFFF8240.W
	MOVE.W #$2300,SR
	RTS
INTS	DS.L 3
FULLVBL	MOVEM.L D0-D7/A0-A6,-(A7)
	LEA $FFFF8240.W,A0
	MOVEQ #0,D0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)
	LEA $FFFF8209.W,A0
	LEA $FFFF8260.W,A1
	MOVEQ	#0,D1
	MOVEQ	#$10,D2
	MOVEQ	#2,D3
	MOVEQ	#0,D4
	MOVEQ #28-1,D5
	MOVE.W CONTLR,D6
	MOVE.W CONTLR+2,D7
	SUB.W D6,D5
	SUB.W D7,D5
	MOVE.W	#$2700,SR
	MOVEQ	#10-1,D0
WAIT1	DBF	D0,WAIT1
	CLR.B	$FFFF820A.W
	MOVEQ	#3,D0
WAIT2	NOP
	DBF	D0,WAIT2
	MOVE.W	#2,$FFFF820A.W
COUNT1	MOVE.B	(A0),D0
	BEQ.S	COUNT1
	SUB.W	D0,D2
	LSL.W	D2,D1
	LEA $FFFF820A.W,A0
	REPT 85
	NOP
	ENDR
MAINLO1	REPT 10
	NOP
	ENDR
	MOVE.B	D3,(A1)
	MOVE.B	D4,(A1)
	REPT 89
	NOP
	ENDR
	MOVE.B	D4,(A0)
	MOVE.B	D3,(A0)
	REPT 13
	NOP
	ENDR
	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)
	DBF	D6,MAINLO1
	BRA.S COLOCA
MAINLO2	REPT 4
	NOP
	ENDR
COLOCA	REPT 99
	NOP
	ENDR
	MOVE.B	D4,(A0)
	MOVE.B	D3,(A0)
	REPT 13
	NOP
	ENDR
	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)
	DBF	D7,MAINLO2
EVBL	MOVEM.L (A7)+,D0-D7/A0-A6
	ST SYNC
	RTE
SYNC	DS.W 1
CONTLR	DS.W 1
	DS.W 1
CHSC	DC.L SCDATA
SCDATA	INCBIN 'HARD.DAT'
	DC.W -1
PIC	INCBIN 'REDLOGO.PI1'
